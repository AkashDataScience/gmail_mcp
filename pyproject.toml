[project]
name = "gmail-mcp"
version = "0.1.0"
description = "AI-Powered Gmail Assistant using MCP (Model Context Protocol) and Gemini AI"
authors = [
    {name = "Gmail MCP Team"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["gmail", "mcp", "ai", "email", "gemini", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Email",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core MCP and async support
    "mcp>=1.0.0",
    "anyio>=4.0.0",
    
    # Google APIs and Authentication
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.0.0",
    
    # Gemini AI
    "google-generativeai>=0.3.0",
    
    # Environment and utilities
    "python-dotenv>=1.0.0",
    
    # Email processing
    "email-validator>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

enhanced = [
    # Enhanced logging and debugging
    "rich>=13.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/gmail-mcp"
Repository = "https://github.com/your-username/gmail-mcp"
Issues = "https://github.com/your-username/gmail-mcp/issues"

[project.scripts]
gmail-mcp = "talk2gmail:main"
gmail-mcp-server = "gmail.server:main"
gmail-setup-check = "check_setup:check_setup"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "rich>=13.0.0",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["gmail", "talk2gmail"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "google.*",
    "mcp.*",
    "dotenv.*",
]
ignore_missing_imports = true